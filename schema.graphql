# source: https://api.graph.cool/simple/v1/cjex7lpos3k6z0152ckc92pmx
# timestamp: Wed Apr 18 2018 15:29:28 GMT-0700 (PDT)

enum _ModelMutationType {
  CREATED
  UPDATED
  DELETED
}

"""Meta information about the query."""
type _QueryMeta {
  count: Int!
}

type AboutPage implements Node {
  banner(filter: BannerFilter): Banner
  id: ID!
  story(filter: StoryFilter): Story
  website(filter: WebsiteFilter): Website
}

input AboutPagebannerBanner {
  images: [String!]
  subtitle: String
  titles: [String!]
  homePageId: ID
  homePage: BannerhomePageHomePage
}

input AboutPageFilter {
  """Logical AND on all given filters."""
  AND: [AboutPageFilter!]

  """Logical OR on all given filters."""
  OR: [AboutPageFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  banner: BannerFilter
  story: StoryFilter
  website: WebsiteFilter
}

enum AboutPageOrderBy {
  id_ASC
  id_DESC
}

type AboutPagePreviousValues {
  id: ID!
}

input AboutPagestoryStory {
  lastUpdated: DateTime!
  paragraph: String
  title: String
  homePageId: ID
  homePage: StoryhomePageHomePage
}

input AboutPageSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [AboutPageSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [AboutPageSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AboutPageSubscriptionFilterNode
}

input AboutPageSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  banner: BannerFilter
  story: StoryFilter
  website: WebsiteFilter
}

type AboutPageSubscriptionPayload {
  mutation: _ModelMutationType!
  node: AboutPage
  updatedFields: [String!]
  previousValues: AboutPagePreviousValues
}

input AboutPagewebsiteWebsite {
  businessId: ID
  business: WebsitebusinessBusiness
  homePageId: ID
  homePage: WebsitehomePageHomePage
}

type AddToBrandOnSocialMediaPayload {
  brandBrand: Brand
  socialMediasSocialMedia: SocialMedia
}

type AddToBusinessSpecialsOnByDateSpecialPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  byDateSpecialsByDateSpecial: ByDateSpecial
}

type AddToBusinessSpecialsOnByWeekdaySpecialPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  byWeekdaySpecialsByWeekdaySpecial: ByWeekdaySpecial
}

type AddToItemGroupOnInventoryPayload {
  itemGroupsItemGroup: ItemGroup
  inventoryInventory: Inventory
}

type AddToItemOnItemGroupPayload {
  itemsItem: Item
  itemGroupItemGroup: ItemGroup
}

type AddToOpenHoursOnHoursPayload {
  openHoursesOpenHours: OpenHours
  hoursHours: Hours
}

type AddToSocialMediaOnBusinessPayload {
  socialMediasSocialMedia: SocialMedia
  businessBusiness: Business
}

type AddToStaffOnBusinessPayload {
  staffsStaff: Staff
  businessBusiness: Business
}

type Banner implements Node {
  aboutPage(filter: AboutPageFilter): AboutPage
  homePage(filter: HomePageFilter): HomePage
  id: ID!
  images: [String!]
  subtitle: String
  titles: [String!]
}

input BanneraboutPageAboutPage {
  storyId: ID
  story: AboutPagestoryStory
  websiteId: ID
  website: AboutPagewebsiteWebsite
}

input BannerFilter {
  """Logical AND on all given filters."""
  AND: [BannerFilter!]

  """Logical OR on all given filters."""
  OR: [BannerFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  aboutPage: AboutPageFilter
  homePage: HomePageFilter
}

input BannerhomePageHomePage {
  storyId: ID
  story: HomePagestoryStory
  websiteId: ID
  website: HomePagewebsiteWebsite
}

enum BannerOrderBy {
  id_ASC
  id_DESC
  subtitle_ASC
  subtitle_DESC
}

type BannerPreviousValues {
  id: ID!
  images: [String!]
  subtitle: String
  titles: [String!]
}

input BannerSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [BannerSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [BannerSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BannerSubscriptionFilterNode
}

input BannerSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  aboutPage: AboutPageFilter
  homePage: HomePageFilter
}

type BannerSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Banner
  updatedFields: [String!]
  previousValues: BannerPreviousValues
}

type Brand implements Node {
  icon: String!
  id: ID!
  name: String!
  socialMedias(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia!]

  """Meta information about the query."""
  _socialMediasMeta(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input BrandFilter {
  """Logical AND on all given filters."""
  AND: [BrandFilter!]

  """Logical OR on all given filters."""
  OR: [BrandFilter!]
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  socialMedias_every: SocialMediaFilter
  socialMedias_some: SocialMediaFilter
  socialMedias_none: SocialMediaFilter
}

enum BrandOrderBy {
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type BrandPreviousValues {
  icon: String!
  id: ID!
  name: String!
}

input BrandsocialMediasSocialMedia {
  url: String!
  businessId: ID
  business: SocialMediabusinessBusiness
}

input BrandSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [BrandSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [BrandSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BrandSubscriptionFilterNode
}

input BrandSubscriptionFilterNode {
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  socialMedias_every: SocialMediaFilter
  socialMedias_some: SocialMediaFilter
  socialMedias_none: SocialMediaFilter
}

type BrandSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Brand
  updatedFields: [String!]
  previousValues: BrandPreviousValues
}

type Business implements Node {
  businessSpecials(filter: BusinessSpecialsFilter): BusinessSpecials
  contact(filter: ContactFilter): Contact
  hours(filter: HoursFilter): Hours
  id: ID!
  inventory(filter: InventoryFilter): Inventory
  name: String!
  socialMedias(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia!]
  staffs(filter: StaffFilter, orderBy: StaffOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Staff!]
  type: BusinessType
  website(filter: WebsiteFilter): Website

  """Meta information about the query."""
  _socialMediasMeta(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  """Meta information about the query."""
  _staffsMeta(filter: StaffFilter, orderBy: StaffOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input BusinessbusinessSpecialsBusinessSpecials {
  byDateSpecialsIds: [ID!]
  byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!]
  byWeekdaySpecialsIds: [ID!]
  byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]
}

input BusinesscontactContact {
  city: String
  country: String
  phone: String
  street: String
}

input BusinessFilter {
  """Logical AND on all given filters."""
  AND: [BusinessFilter!]

  """Logical OR on all given filters."""
  OR: [BusinessFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  type: BusinessType

  """All values that are not equal to given value."""
  type_not: BusinessType

  """All values that are contained in given list."""
  type_in: [BusinessType!]

  """All values that are not contained in given list."""
  type_not_in: [BusinessType!]
  businessSpecials: BusinessSpecialsFilter
  contact: ContactFilter
  hours: HoursFilter
  inventory: InventoryFilter
  socialMedias_every: SocialMediaFilter
  socialMedias_some: SocialMediaFilter
  socialMedias_none: SocialMediaFilter
  staffs_every: StaffFilter
  staffs_some: StaffFilter
  staffs_none: StaffFilter
  website: WebsiteFilter
}

input BusinesshoursHours {
  isOpenNow: Boolean!
  openHoursesIds: [ID!]
  openHourses: [HoursopenHoursesOpenHours!]
}

input BusinessinventoryInventory {
  itemGroupsIds: [ID!]
  itemGroups: [InventoryitemGroupsItemGroup!]
}

enum BusinessOrderBy {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
}

type BusinessPreviousValues {
  id: ID!
  name: String!
  type: BusinessType
}

input BusinesssocialMediasSocialMedia {
  url: String!
  brandId: ID
  brand: SocialMediabrandBrand
}

type BusinessSpecials implements Node {
  business(filter: BusinessFilter): Business
  byDateSpecials(filter: ByDateSpecialFilter, orderBy: ByDateSpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ByDateSpecial!]
  byWeekdaySpecials(filter: ByWeekdaySpecialFilter, orderBy: ByWeekdaySpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ByWeekdaySpecial!]
  id: ID!

  """Meta information about the query."""
  _byDateSpecialsMeta(filter: ByDateSpecialFilter, orderBy: ByDateSpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  """Meta information about the query."""
  _byWeekdaySpecialsMeta(filter: ByWeekdaySpecialFilter, orderBy: ByWeekdaySpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input BusinessSpecialsbusinessBusiness {
  name: String!
  type: BusinessType
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input BusinessSpecialsbyDateSpecialsByDateSpecial {
  date: DateTime
  description: String
  image: String
  occasion: String!
  title: String!
  itemId: ID
  item: ByDateSpecialitemItem
}

input BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial {
  description: String
  image: String
  occasion: Weekdays!
  title: String!
  itemId: ID
  item: ByWeekdaySpecialitemItem
}

input BusinessSpecialsFilter {
  """Logical AND on all given filters."""
  AND: [BusinessSpecialsFilter!]

  """Logical OR on all given filters."""
  OR: [BusinessSpecialsFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  business: BusinessFilter
  byDateSpecials_every: ByDateSpecialFilter
  byDateSpecials_some: ByDateSpecialFilter
  byDateSpecials_none: ByDateSpecialFilter
  byWeekdaySpecials_every: ByWeekdaySpecialFilter
  byWeekdaySpecials_some: ByWeekdaySpecialFilter
  byWeekdaySpecials_none: ByWeekdaySpecialFilter
}

enum BusinessSpecialsOrderBy {
  id_ASC
  id_DESC
}

type BusinessSpecialsPreviousValues {
  id: ID!
}

input BusinessSpecialsSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [BusinessSpecialsSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [BusinessSpecialsSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BusinessSpecialsSubscriptionFilterNode
}

input BusinessSpecialsSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  business: BusinessFilter
  byDateSpecials_every: ByDateSpecialFilter
  byDateSpecials_some: ByDateSpecialFilter
  byDateSpecials_none: ByDateSpecialFilter
  byWeekdaySpecials_every: ByWeekdaySpecialFilter
  byWeekdaySpecials_some: ByWeekdaySpecialFilter
  byWeekdaySpecials_none: ByWeekdaySpecialFilter
}

type BusinessSpecialsSubscriptionPayload {
  mutation: _ModelMutationType!
  node: BusinessSpecials
  updatedFields: [String!]
  previousValues: BusinessSpecialsPreviousValues
}

input BusinessstaffsStaff {
  image: String
  name: String!
  quote: String
  role: String!
}

input BusinessSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [BusinessSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [BusinessSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BusinessSubscriptionFilterNode
}

input BusinessSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  type: BusinessType

  """All values that are not equal to given value."""
  type_not: BusinessType

  """All values that are contained in given list."""
  type_in: [BusinessType!]

  """All values that are not contained in given list."""
  type_not_in: [BusinessType!]
  businessSpecials: BusinessSpecialsFilter
  contact: ContactFilter
  hours: HoursFilter
  inventory: InventoryFilter
  socialMedias_every: SocialMediaFilter
  socialMedias_some: SocialMediaFilter
  socialMedias_none: SocialMediaFilter
  staffs_every: StaffFilter
  staffs_some: StaffFilter
  staffs_none: StaffFilter
  website: WebsiteFilter
}

type BusinessSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Business
  updatedFields: [String!]
  previousValues: BusinessPreviousValues
}

enum BusinessType {
  Financial
  Groceries
  Healthcare
  Lifestyle
  Restaurant
  Education
  Events
  Engineering
  Tourism
  Fitness
  Growth
}

input BusinesswebsiteWebsite {
  aboutPageId: ID
  aboutPage: WebsiteaboutPageAboutPage
  homePageId: ID
  homePage: WebsitehomePageHomePage
}

type ByDateSpecial implements Node {
  businessSpecials(filter: BusinessSpecialsFilter): BusinessSpecials
  date: DateTime
  description: String
  id: ID!
  image: String
  item(filter: ItemFilter): Item
  occasion: String!
  title: String!
}

input ByDateSpecialbusinessSpecialsBusinessSpecials {
  businessId: ID
  business: BusinessSpecialsbusinessBusiness
  byDateSpecialsIds: [ID!]
  byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!]
  byWeekdaySpecialsIds: [ID!]
  byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]
}

input ByDateSpecialFilter {
  """Logical AND on all given filters."""
  AND: [ByDateSpecialFilter!]

  """Logical OR on all given filters."""
  OR: [ByDateSpecialFilter!]
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  occasion: String

  """All values that are not equal to given value."""
  occasion_not: String

  """All values that are contained in given list."""
  occasion_in: [String!]

  """All values that are not contained in given list."""
  occasion_not_in: [String!]

  """All values less than the given value."""
  occasion_lt: String

  """All values less than or equal the given value."""
  occasion_lte: String

  """All values greater than the given value."""
  occasion_gt: String

  """All values greater than or equal the given value."""
  occasion_gte: String

  """All values containing the given string."""
  occasion_contains: String

  """All values not containing the given string."""
  occasion_not_contains: String

  """All values starting with the given string."""
  occasion_starts_with: String

  """All values not starting with the given string."""
  occasion_not_starts_with: String

  """All values ending with the given string."""
  occasion_ends_with: String

  """All values not ending with the given string."""
  occasion_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  businessSpecials: BusinessSpecialsFilter
  item: ItemFilter
}

input ByDateSpecialitemItem {
  description: String
  image: String
  inStock: Boolean
  name: String!
  price: Int
  byWeekdaySpecialId: ID
  byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial
  itemGroupId: ID
  itemGroup: ItemitemGroupItemGroup
}

enum ByDateSpecialOrderBy {
  date_ASC
  date_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  occasion_ASC
  occasion_DESC
  title_ASC
  title_DESC
}

type ByDateSpecialPreviousValues {
  date: DateTime
  description: String
  id: ID!
  image: String
  occasion: String!
  title: String!
}

input ByDateSpecialSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [ByDateSpecialSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [ByDateSpecialSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ByDateSpecialSubscriptionFilterNode
}

input ByDateSpecialSubscriptionFilterNode {
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  occasion: String

  """All values that are not equal to given value."""
  occasion_not: String

  """All values that are contained in given list."""
  occasion_in: [String!]

  """All values that are not contained in given list."""
  occasion_not_in: [String!]

  """All values less than the given value."""
  occasion_lt: String

  """All values less than or equal the given value."""
  occasion_lte: String

  """All values greater than the given value."""
  occasion_gt: String

  """All values greater than or equal the given value."""
  occasion_gte: String

  """All values containing the given string."""
  occasion_contains: String

  """All values not containing the given string."""
  occasion_not_contains: String

  """All values starting with the given string."""
  occasion_starts_with: String

  """All values not starting with the given string."""
  occasion_not_starts_with: String

  """All values ending with the given string."""
  occasion_ends_with: String

  """All values not ending with the given string."""
  occasion_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  businessSpecials: BusinessSpecialsFilter
  item: ItemFilter
}

type ByDateSpecialSubscriptionPayload {
  mutation: _ModelMutationType!
  node: ByDateSpecial
  updatedFields: [String!]
  previousValues: ByDateSpecialPreviousValues
}

type ByWeekdaySpecial implements Node {
  businessSpecials(filter: BusinessSpecialsFilter): BusinessSpecials
  description: String
  id: ID!
  image: String
  item(filter: ItemFilter): Item
  occasion: Weekdays!
  title: String!
}

input ByWeekdaySpecialbusinessSpecialsBusinessSpecials {
  businessId: ID
  business: BusinessSpecialsbusinessBusiness
  byDateSpecialsIds: [ID!]
  byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!]
  byWeekdaySpecialsIds: [ID!]
  byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]
}

input ByWeekdaySpecialFilter {
  """Logical AND on all given filters."""
  AND: [ByWeekdaySpecialFilter!]

  """Logical OR on all given filters."""
  OR: [ByWeekdaySpecialFilter!]
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  occasion: Weekdays

  """All values that are not equal to given value."""
  occasion_not: Weekdays

  """All values that are contained in given list."""
  occasion_in: [Weekdays!]

  """All values that are not contained in given list."""
  occasion_not_in: [Weekdays!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  businessSpecials: BusinessSpecialsFilter
  item: ItemFilter
}

input ByWeekdaySpecialitemItem {
  description: String
  image: String
  inStock: Boolean
  name: String!
  price: Int
  byDateSpecialId: ID
  byDateSpecial: ItembyDateSpecialByDateSpecial
  itemGroupId: ID
  itemGroup: ItemitemGroupItemGroup
}

enum ByWeekdaySpecialOrderBy {
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  occasion_ASC
  occasion_DESC
  title_ASC
  title_DESC
}

type ByWeekdaySpecialPreviousValues {
  description: String
  id: ID!
  image: String
  occasion: Weekdays!
  title: String!
}

input ByWeekdaySpecialSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [ByWeekdaySpecialSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [ByWeekdaySpecialSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ByWeekdaySpecialSubscriptionFilterNode
}

input ByWeekdaySpecialSubscriptionFilterNode {
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  occasion: Weekdays

  """All values that are not equal to given value."""
  occasion_not: Weekdays

  """All values that are contained in given list."""
  occasion_in: [Weekdays!]

  """All values that are not contained in given list."""
  occasion_not_in: [Weekdays!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  businessSpecials: BusinessSpecialsFilter
  item: ItemFilter
}

type ByWeekdaySpecialSubscriptionPayload {
  mutation: _ModelMutationType!
  node: ByWeekdaySpecial
  updatedFields: [String!]
  previousValues: ByWeekdaySpecialPreviousValues
}

type Contact implements Node {
  business(filter: BusinessFilter): Business
  city: String
  country: String
  id: ID!
  phone: String
  street: String
}

input ContactbusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input ContactFilter {
  """Logical AND on all given filters."""
  AND: [ContactFilter!]

  """Logical OR on all given filters."""
  OR: [ContactFilter!]
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  country: String

  """All values that are not equal to given value."""
  country_not: String

  """All values that are contained in given list."""
  country_in: [String!]

  """All values that are not contained in given list."""
  country_not_in: [String!]

  """All values less than the given value."""
  country_lt: String

  """All values less than or equal the given value."""
  country_lte: String

  """All values greater than the given value."""
  country_gt: String

  """All values greater than or equal the given value."""
  country_gte: String

  """All values containing the given string."""
  country_contains: String

  """All values not containing the given string."""
  country_not_contains: String

  """All values starting with the given string."""
  country_starts_with: String

  """All values not starting with the given string."""
  country_not_starts_with: String

  """All values ending with the given string."""
  country_ends_with: String

  """All values not ending with the given string."""
  country_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  street: String

  """All values that are not equal to given value."""
  street_not: String

  """All values that are contained in given list."""
  street_in: [String!]

  """All values that are not contained in given list."""
  street_not_in: [String!]

  """All values less than the given value."""
  street_lt: String

  """All values less than or equal the given value."""
  street_lte: String

  """All values greater than the given value."""
  street_gt: String

  """All values greater than or equal the given value."""
  street_gte: String

  """All values containing the given string."""
  street_contains: String

  """All values not containing the given string."""
  street_not_contains: String

  """All values starting with the given string."""
  street_starts_with: String

  """All values not starting with the given string."""
  street_not_starts_with: String

  """All values ending with the given string."""
  street_ends_with: String

  """All values not ending with the given string."""
  street_not_ends_with: String
  business: BusinessFilter
}

enum ContactOrderBy {
  city_ASC
  city_DESC
  country_ASC
  country_DESC
  id_ASC
  id_DESC
  phone_ASC
  phone_DESC
  street_ASC
  street_DESC
}

type ContactPreviousValues {
  city: String
  country: String
  id: ID!
  phone: String
  street: String
}

input ContactSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [ContactSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [ContactSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ContactSubscriptionFilterNode
}

input ContactSubscriptionFilterNode {
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  country: String

  """All values that are not equal to given value."""
  country_not: String

  """All values that are contained in given list."""
  country_in: [String!]

  """All values that are not contained in given list."""
  country_not_in: [String!]

  """All values less than the given value."""
  country_lt: String

  """All values less than or equal the given value."""
  country_lte: String

  """All values greater than the given value."""
  country_gt: String

  """All values greater than or equal the given value."""
  country_gte: String

  """All values containing the given string."""
  country_contains: String

  """All values not containing the given string."""
  country_not_contains: String

  """All values starting with the given string."""
  country_starts_with: String

  """All values not starting with the given string."""
  country_not_starts_with: String

  """All values ending with the given string."""
  country_ends_with: String

  """All values not ending with the given string."""
  country_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  street: String

  """All values that are not equal to given value."""
  street_not: String

  """All values that are contained in given list."""
  street_in: [String!]

  """All values that are not contained in given list."""
  street_not_in: [String!]

  """All values less than the given value."""
  street_lt: String

  """All values less than or equal the given value."""
  street_lte: String

  """All values greater than the given value."""
  street_gt: String

  """All values greater than or equal the given value."""
  street_gte: String

  """All values containing the given string."""
  street_contains: String

  """All values not containing the given string."""
  street_not_contains: String

  """All values starting with the given string."""
  street_starts_with: String

  """All values not starting with the given string."""
  street_not_starts_with: String

  """All values ending with the given string."""
  street_ends_with: String

  """All values not ending with the given string."""
  street_not_ends_with: String
  business: BusinessFilter
}

type ContactSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Contact
  updatedFields: [String!]
  previousValues: ContactPreviousValues
}

input CreateAboutPage {
  bannerId: ID
  banner: AboutPagebannerBanner
  storyId: ID
  story: AboutPagestoryStory
  websiteId: ID
  website: AboutPagewebsiteWebsite
}

input CreateBanner {
  images: [String!]
  subtitle: String
  titles: [String!]
  aboutPageId: ID
  aboutPage: BanneraboutPageAboutPage
  homePageId: ID
  homePage: BannerhomePageHomePage
}

input CreateBrand {
  icon: String!
  name: String!
  socialMediasIds: [ID!]
  socialMedias: [BrandsocialMediasSocialMedia!]
}

input CreateBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input CreateBusinessSpecials {
  businessId: ID
  business: BusinessSpecialsbusinessBusiness
  byDateSpecialsIds: [ID!]
  byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!]
  byWeekdaySpecialsIds: [ID!]
  byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]
}

input CreateByDateSpecial {
  date: DateTime
  description: String
  image: String
  occasion: String!
  title: String!
  businessSpecialsId: ID
  businessSpecials: ByDateSpecialbusinessSpecialsBusinessSpecials
  itemId: ID
  item: ByDateSpecialitemItem
}

input CreateByWeekdaySpecial {
  description: String
  image: String
  occasion: Weekdays!
  title: String!
  businessSpecialsId: ID
  businessSpecials: ByWeekdaySpecialbusinessSpecialsBusinessSpecials
  itemId: ID
  item: ByWeekdaySpecialitemItem
}

input CreateContact {
  city: String
  country: String
  phone: String
  street: String
  businessId: ID
  business: ContactbusinessBusiness
}

input CreateFile {
  name: String!
}

input CreateHomePage {
  bannerId: ID
  banner: HomePagebannerBanner
  storyId: ID
  story: HomePagestoryStory
  websiteId: ID
  website: HomePagewebsiteWebsite
}

input CreateHours {
  isOpenNow: Boolean!
  businessId: ID
  business: HoursbusinessBusiness
  openHoursesIds: [ID!]
  openHourses: [HoursopenHoursesOpenHours!]
}

input CreateInventory {
  businessId: ID
  business: InventorybusinessBusiness
  itemGroupsIds: [ID!]
  itemGroups: [InventoryitemGroupsItemGroup!]
}

input CreateItem {
  description: String
  image: String
  inStock: Boolean
  name: String!
  price: Int
  byDateSpecialId: ID
  byDateSpecial: ItembyDateSpecialByDateSpecial
  byWeekdaySpecialId: ID
  byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial
  itemGroupId: ID
  itemGroup: ItemitemGroupItemGroup
}

input CreateItemGroup {
  image: String
  name: String!
  inventoryId: ID
  inventory: ItemGroupinventoryInventory
  itemsIds: [ID!]
  items: [ItemGroupitemsItem!]
}

input CreateOpenHours {
  day: Weekdays!
  end: String!
  isOvernight: Boolean
  start: String!
  hoursId: ID
  hours: OpenHourshoursHours
}

input CreateSocialMedia {
  url: String!
  brandId: ID
  brand: SocialMediabrandBrand
  businessId: ID
  business: SocialMediabusinessBusiness
}

input CreateStaff {
  image: String
  name: String!
  quote: String
  role: String!
  businessId: ID
  business: StaffbusinessBusiness
}

input CreateStory {
  lastUpdated: DateTime!
  paragraph: String
  title: String
  aboutPageId: ID
  aboutPage: StoryaboutPageAboutPage
  homePageId: ID
  homePage: StoryhomePageHomePage
}

input CreateUser {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input CreateWebsite {
  aboutPageId: ID
  aboutPage: WebsiteaboutPageAboutPage
  businessId: ID
  business: WebsitebusinessBusiness
  homePageId: ID
  homePage: WebsitehomePageHomePage
}

scalar DateTime

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileFilter {
  """Logical AND on all given filters."""
  AND: [FileFilter!]

  """Logical OR on all given filters."""
  OR: [FileFilter!]
  contentType: String

  """All values that are not equal to given value."""
  contentType_not: String

  """All values that are contained in given list."""
  contentType_in: [String!]

  """All values that are not contained in given list."""
  contentType_not_in: [String!]

  """All values less than the given value."""
  contentType_lt: String

  """All values less than or equal the given value."""
  contentType_lte: String

  """All values greater than the given value."""
  contentType_gt: String

  """All values greater than or equal the given value."""
  contentType_gte: String

  """All values containing the given string."""
  contentType_contains: String

  """All values not containing the given string."""
  contentType_not_contains: String

  """All values starting with the given string."""
  contentType_starts_with: String

  """All values not starting with the given string."""
  contentType_not_starts_with: String

  """All values ending with the given string."""
  contentType_ends_with: String

  """All values not ending with the given string."""
  contentType_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  secret: String

  """All values that are not equal to given value."""
  secret_not: String

  """All values that are contained in given list."""
  secret_in: [String!]

  """All values that are not contained in given list."""
  secret_not_in: [String!]

  """All values less than the given value."""
  secret_lt: String

  """All values less than or equal the given value."""
  secret_lte: String

  """All values greater than the given value."""
  secret_gt: String

  """All values greater than or equal the given value."""
  secret_gte: String

  """All values containing the given string."""
  secret_contains: String

  """All values not containing the given string."""
  secret_not_contains: String

  """All values starting with the given string."""
  secret_starts_with: String

  """All values not starting with the given string."""
  secret_not_starts_with: String

  """All values ending with the given string."""
  secret_ends_with: String

  """All values not ending with the given string."""
  secret_not_ends_with: String
  size: Int

  """All values that are not equal to given value."""
  size_not: Int

  """All values that are contained in given list."""
  size_in: [Int!]

  """All values that are not contained in given list."""
  size_not_in: [Int!]

  """All values less than the given value."""
  size_lt: Int

  """All values less than or equal the given value."""
  size_lte: Int

  """All values greater than the given value."""
  size_gt: Int

  """All values greater than or equal the given value."""
  size_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
}

enum FileOrderBy {
  contentType_ASC
  contentType_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

type FilePreviousValues {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [FileSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [FileSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FileSubscriptionFilterNode
}

input FileSubscriptionFilterNode {
  contentType: String

  """All values that are not equal to given value."""
  contentType_not: String

  """All values that are contained in given list."""
  contentType_in: [String!]

  """All values that are not contained in given list."""
  contentType_not_in: [String!]

  """All values less than the given value."""
  contentType_lt: String

  """All values less than or equal the given value."""
  contentType_lte: String

  """All values greater than the given value."""
  contentType_gt: String

  """All values greater than or equal the given value."""
  contentType_gte: String

  """All values containing the given string."""
  contentType_contains: String

  """All values not containing the given string."""
  contentType_not_contains: String

  """All values starting with the given string."""
  contentType_starts_with: String

  """All values not starting with the given string."""
  contentType_not_starts_with: String

  """All values ending with the given string."""
  contentType_ends_with: String

  """All values not ending with the given string."""
  contentType_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  secret: String

  """All values that are not equal to given value."""
  secret_not: String

  """All values that are contained in given list."""
  secret_in: [String!]

  """All values that are not contained in given list."""
  secret_not_in: [String!]

  """All values less than the given value."""
  secret_lt: String

  """All values less than or equal the given value."""
  secret_lte: String

  """All values greater than the given value."""
  secret_gt: String

  """All values greater than or equal the given value."""
  secret_gte: String

  """All values containing the given string."""
  secret_contains: String

  """All values not containing the given string."""
  secret_not_contains: String

  """All values starting with the given string."""
  secret_starts_with: String

  """All values not starting with the given string."""
  secret_not_starts_with: String

  """All values ending with the given string."""
  secret_ends_with: String

  """All values not ending with the given string."""
  secret_not_ends_with: String
  size: Int

  """All values that are not equal to given value."""
  size_not: Int

  """All values that are contained in given list."""
  size_in: [Int!]

  """All values that are not contained in given list."""
  size_not_in: [Int!]

  """All values less than the given value."""
  size_lt: Int

  """All values less than or equal the given value."""
  size_lte: Int

  """All values greater than the given value."""
  size_gt: Int

  """All values greater than or equal the given value."""
  size_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
}

type FileSubscriptionPayload {
  mutation: _ModelMutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

type HomePage implements Node {
  banner(filter: BannerFilter): Banner
  id: ID!
  story(filter: StoryFilter): Story
  website(filter: WebsiteFilter): Website
}

input HomePagebannerBanner {
  images: [String!]
  subtitle: String
  titles: [String!]
  aboutPageId: ID
  aboutPage: BanneraboutPageAboutPage
}

input HomePageFilter {
  """Logical AND on all given filters."""
  AND: [HomePageFilter!]

  """Logical OR on all given filters."""
  OR: [HomePageFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  banner: BannerFilter
  story: StoryFilter
  website: WebsiteFilter
}

enum HomePageOrderBy {
  id_ASC
  id_DESC
}

type HomePagePreviousValues {
  id: ID!
}

input HomePagestoryStory {
  lastUpdated: DateTime!
  paragraph: String
  title: String
  aboutPageId: ID
  aboutPage: StoryaboutPageAboutPage
}

input HomePageSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [HomePageSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [HomePageSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: HomePageSubscriptionFilterNode
}

input HomePageSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  banner: BannerFilter
  story: StoryFilter
  website: WebsiteFilter
}

type HomePageSubscriptionPayload {
  mutation: _ModelMutationType!
  node: HomePage
  updatedFields: [String!]
  previousValues: HomePagePreviousValues
}

input HomePagewebsiteWebsite {
  aboutPageId: ID
  aboutPage: WebsiteaboutPageAboutPage
  businessId: ID
  business: WebsitebusinessBusiness
}

type Hours implements Node {
  business(filter: BusinessFilter): Business
  id: ID!
  isOpenNow: Boolean!
  openHourses(filter: OpenHoursFilter, orderBy: OpenHoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [OpenHours!]

  """Meta information about the query."""
  _openHoursesMeta(filter: OpenHoursFilter, orderBy: OpenHoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input HoursbusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input HoursFilter {
  """Logical AND on all given filters."""
  AND: [HoursFilter!]

  """Logical OR on all given filters."""
  OR: [HoursFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  isOpenNow: Boolean

  """All values that are not equal to given value."""
  isOpenNow_not: Boolean
  business: BusinessFilter
  openHourses_every: OpenHoursFilter
  openHourses_some: OpenHoursFilter
  openHourses_none: OpenHoursFilter
}

input HoursopenHoursesOpenHours {
  day: Weekdays!
  end: String!
  isOvernight: Boolean
  start: String!
}

enum HoursOrderBy {
  id_ASC
  id_DESC
  isOpenNow_ASC
  isOpenNow_DESC
}

type HoursPreviousValues {
  id: ID!
  isOpenNow: Boolean!
}

input HoursSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [HoursSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [HoursSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: HoursSubscriptionFilterNode
}

input HoursSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  isOpenNow: Boolean

  """All values that are not equal to given value."""
  isOpenNow_not: Boolean
  business: BusinessFilter
  openHourses_every: OpenHoursFilter
  openHourses_some: OpenHoursFilter
  openHourses_none: OpenHoursFilter
}

type HoursSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Hours
  updatedFields: [String!]
  previousValues: HoursPreviousValues
}

type Inventory implements Node {
  business(filter: BusinessFilter): Business
  id: ID!
  itemGroups(filter: ItemGroupFilter, orderBy: ItemGroupOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ItemGroup!]

  """Meta information about the query."""
  _itemGroupsMeta(filter: ItemGroupFilter, orderBy: ItemGroupOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input InventorybusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input InventoryFilter {
  """Logical AND on all given filters."""
  AND: [InventoryFilter!]

  """Logical OR on all given filters."""
  OR: [InventoryFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  business: BusinessFilter
  itemGroups_every: ItemGroupFilter
  itemGroups_some: ItemGroupFilter
  itemGroups_none: ItemGroupFilter
}

input InventoryitemGroupsItemGroup {
  image: String
  name: String!
  itemsIds: [ID!]
  items: [ItemGroupitemsItem!]
}

enum InventoryOrderBy {
  id_ASC
  id_DESC
}

type InventoryPreviousValues {
  id: ID!
}

input InventorySubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [InventorySubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [InventorySubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: InventorySubscriptionFilterNode
}

input InventorySubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  business: BusinessFilter
  itemGroups_every: ItemGroupFilter
  itemGroups_some: ItemGroupFilter
  itemGroups_none: ItemGroupFilter
}

type InventorySubscriptionPayload {
  mutation: _ModelMutationType!
  node: Inventory
  updatedFields: [String!]
  previousValues: InventoryPreviousValues
}

type Item implements Node {
  byDateSpecial(filter: ByDateSpecialFilter): ByDateSpecial
  byWeekdaySpecial(filter: ByWeekdaySpecialFilter): ByWeekdaySpecial
  description: String
  id: ID!
  image: String
  inStock: Boolean!
  itemGroup(filter: ItemGroupFilter): ItemGroup
  name: String!
  price: Int
}

input ItembyDateSpecialByDateSpecial {
  date: DateTime
  description: String
  image: String
  occasion: String!
  title: String!
  businessSpecialsId: ID
  businessSpecials: ByDateSpecialbusinessSpecialsBusinessSpecials
}

input ItembyWeekdaySpecialByWeekdaySpecial {
  description: String
  image: String
  occasion: Weekdays!
  title: String!
  businessSpecialsId: ID
  businessSpecials: ByWeekdaySpecialbusinessSpecialsBusinessSpecials
}

input ItemFilter {
  """Logical AND on all given filters."""
  AND: [ItemFilter!]

  """Logical OR on all given filters."""
  OR: [ItemFilter!]
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  inStock: Boolean

  """All values that are not equal to given value."""
  inStock_not: Boolean
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  byDateSpecial: ByDateSpecialFilter
  byWeekdaySpecial: ByWeekdaySpecialFilter
  itemGroup: ItemGroupFilter
}

type ItemGroup implements Node {
  id: ID!
  image: String
  inventory(filter: InventoryFilter): Inventory
  items(filter: ItemFilter, orderBy: ItemOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Item!]
  name: String!

  """Meta information about the query."""
  _itemsMeta(filter: ItemFilter, orderBy: ItemOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input ItemGroupFilter {
  """Logical AND on all given filters."""
  AND: [ItemGroupFilter!]

  """Logical OR on all given filters."""
  OR: [ItemGroupFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  inventory: InventoryFilter
  items_every: ItemFilter
  items_some: ItemFilter
  items_none: ItemFilter
}

input ItemGroupinventoryInventory {
  businessId: ID
  business: InventorybusinessBusiness
  itemGroupsIds: [ID!]
  itemGroups: [InventoryitemGroupsItemGroup!]
}

input ItemGroupitemsItem {
  description: String
  image: String
  inStock: Boolean
  name: String!
  price: Int
  byDateSpecialId: ID
  byDateSpecial: ItembyDateSpecialByDateSpecial
  byWeekdaySpecialId: ID
  byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial
}

enum ItemGroupOrderBy {
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
}

type ItemGroupPreviousValues {
  id: ID!
  image: String
  name: String!
}

input ItemGroupSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [ItemGroupSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [ItemGroupSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ItemGroupSubscriptionFilterNode
}

input ItemGroupSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  inventory: InventoryFilter
  items_every: ItemFilter
  items_some: ItemFilter
  items_none: ItemFilter
}

type ItemGroupSubscriptionPayload {
  mutation: _ModelMutationType!
  node: ItemGroup
  updatedFields: [String!]
  previousValues: ItemGroupPreviousValues
}

input ItemitemGroupItemGroup {
  image: String
  name: String!
  inventoryId: ID
  inventory: ItemGroupinventoryInventory
  itemsIds: [ID!]
  items: [ItemGroupitemsItem!]
}

enum ItemOrderBy {
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  inStock_ASC
  inStock_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
}

type ItemPreviousValues {
  description: String
  id: ID!
  image: String
  inStock: Boolean!
  name: String!
  price: Int
}

input ItemSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [ItemSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [ItemSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ItemSubscriptionFilterNode
}

input ItemSubscriptionFilterNode {
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  inStock: Boolean

  """All values that are not equal to given value."""
  inStock_not: Boolean
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  byDateSpecial: ByDateSpecialFilter
  byWeekdaySpecial: ByWeekdaySpecialFilter
  itemGroup: ItemGroupFilter
}

type ItemSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Item
  updatedFields: [String!]
  previousValues: ItemPreviousValues
}

type Mutation {
  createAboutPage(bannerId: ID, banner: AboutPagebannerBanner, storyId: ID, story: AboutPagestoryStory, websiteId: ID, website: AboutPagewebsiteWebsite): AboutPage
  createBanner(images: [String!], subtitle: String, titles: [String!], aboutPageId: ID, aboutPage: BanneraboutPageAboutPage, homePageId: ID, homePage: BannerhomePageHomePage): Banner
  createBrand(icon: String!, name: String!, socialMediasIds: [ID!], socialMedias: [BrandsocialMediasSocialMedia!]): Brand
  createBusiness(name: String!, type: BusinessType, businessSpecialsId: ID, businessSpecials: BusinessbusinessSpecialsBusinessSpecials, contactId: ID, contact: BusinesscontactContact, hoursId: ID, hours: BusinesshoursHours, inventoryId: ID, inventory: BusinessinventoryInventory, websiteId: ID, website: BusinesswebsiteWebsite, socialMediasIds: [ID!], socialMedias: [BusinesssocialMediasSocialMedia!], staffsIds: [ID!], staffs: [BusinessstaffsStaff!]): Business
  createBusinessSpecials(businessId: ID, business: BusinessSpecialsbusinessBusiness, byDateSpecialsIds: [ID!], byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!], byWeekdaySpecialsIds: [ID!], byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]): BusinessSpecials
  createByDateSpecial(date: DateTime, description: String, image: String, occasion: String!, title: String!, businessSpecialsId: ID, businessSpecials: ByDateSpecialbusinessSpecialsBusinessSpecials, itemId: ID, item: ByDateSpecialitemItem): ByDateSpecial
  createByWeekdaySpecial(description: String, image: String, occasion: Weekdays!, title: String!, businessSpecialsId: ID, businessSpecials: ByWeekdaySpecialbusinessSpecialsBusinessSpecials, itemId: ID, item: ByWeekdaySpecialitemItem): ByWeekdaySpecial
  createContact(city: String, country: String, phone: String, street: String, businessId: ID, business: ContactbusinessBusiness): Contact
  createFile(name: String!): File
  createHomePage(bannerId: ID, banner: HomePagebannerBanner, storyId: ID, story: HomePagestoryStory, websiteId: ID, website: HomePagewebsiteWebsite): HomePage
  createHours(isOpenNow: Boolean!, businessId: ID, business: HoursbusinessBusiness, openHoursesIds: [ID!], openHourses: [HoursopenHoursesOpenHours!]): Hours
  createInventory(businessId: ID, business: InventorybusinessBusiness, itemGroupsIds: [ID!], itemGroups: [InventoryitemGroupsItemGroup!]): Inventory
  createItem(description: String, image: String, inStock: Boolean, name: String!, price: Int, byDateSpecialId: ID, byDateSpecial: ItembyDateSpecialByDateSpecial, byWeekdaySpecialId: ID, byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial, itemGroupId: ID, itemGroup: ItemitemGroupItemGroup): Item
  createItemGroup(image: String, name: String!, inventoryId: ID, inventory: ItemGroupinventoryInventory, itemsIds: [ID!], items: [ItemGroupitemsItem!]): ItemGroup
  createOpenHours(day: Weekdays!, end: String!, isOvernight: Boolean, start: String!, hoursId: ID, hours: OpenHourshoursHours): OpenHours
  createSocialMedia(url: String!, brandId: ID, brand: SocialMediabrandBrand, businessId: ID, business: SocialMediabusinessBusiness): SocialMedia
  createStaff(image: String, name: String!, quote: String, role: String!, businessId: ID, business: StaffbusinessBusiness): Staff
  createStory(lastUpdated: DateTime!, paragraph: String, title: String, aboutPageId: ID, aboutPage: StoryaboutPageAboutPage, homePageId: ID, homePage: StoryhomePageHomePage): Story
  createWebsite(aboutPageId: ID, aboutPage: WebsiteaboutPageAboutPage, businessId: ID, business: WebsitebusinessBusiness, homePageId: ID, homePage: WebsitehomePageHomePage): Website
  updateAboutPage(id: ID!, bannerId: ID, banner: AboutPagebannerBanner, storyId: ID, story: AboutPagestoryStory, websiteId: ID, website: AboutPagewebsiteWebsite): AboutPage
  updateBanner(id: ID!, images: [String!], subtitle: String, titles: [String!], aboutPageId: ID, aboutPage: BanneraboutPageAboutPage, homePageId: ID, homePage: BannerhomePageHomePage): Banner
  updateBrand(icon: String, id: ID!, name: String, socialMediasIds: [ID!], socialMedias: [BrandsocialMediasSocialMedia!]): Brand
  updateBusiness(id: ID!, name: String, type: BusinessType, businessSpecialsId: ID, businessSpecials: BusinessbusinessSpecialsBusinessSpecials, contactId: ID, contact: BusinesscontactContact, hoursId: ID, hours: BusinesshoursHours, inventoryId: ID, inventory: BusinessinventoryInventory, websiteId: ID, website: BusinesswebsiteWebsite, socialMediasIds: [ID!], socialMedias: [BusinesssocialMediasSocialMedia!], staffsIds: [ID!], staffs: [BusinessstaffsStaff!]): Business
  updateBusinessSpecials(id: ID!, businessId: ID, business: BusinessSpecialsbusinessBusiness, byDateSpecialsIds: [ID!], byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!], byWeekdaySpecialsIds: [ID!], byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]): BusinessSpecials
  updateByDateSpecial(date: DateTime, description: String, id: ID!, image: String, occasion: String, title: String, businessSpecialsId: ID, businessSpecials: ByDateSpecialbusinessSpecialsBusinessSpecials, itemId: ID, item: ByDateSpecialitemItem): ByDateSpecial
  updateByWeekdaySpecial(description: String, id: ID!, image: String, occasion: Weekdays, title: String, businessSpecialsId: ID, businessSpecials: ByWeekdaySpecialbusinessSpecialsBusinessSpecials, itemId: ID, item: ByWeekdaySpecialitemItem): ByWeekdaySpecial
  updateContact(city: String, country: String, id: ID!, phone: String, street: String, businessId: ID, business: ContactbusinessBusiness): Contact
  updateFile(id: ID!, name: String): File
  updateHomePage(id: ID!, bannerId: ID, banner: HomePagebannerBanner, storyId: ID, story: HomePagestoryStory, websiteId: ID, website: HomePagewebsiteWebsite): HomePage
  updateHours(id: ID!, isOpenNow: Boolean, businessId: ID, business: HoursbusinessBusiness, openHoursesIds: [ID!], openHourses: [HoursopenHoursesOpenHours!]): Hours
  updateInventory(id: ID!, businessId: ID, business: InventorybusinessBusiness, itemGroupsIds: [ID!], itemGroups: [InventoryitemGroupsItemGroup!]): Inventory
  updateItem(description: String, id: ID!, image: String, inStock: Boolean, name: String, price: Int, byDateSpecialId: ID, byDateSpecial: ItembyDateSpecialByDateSpecial, byWeekdaySpecialId: ID, byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial, itemGroupId: ID, itemGroup: ItemitemGroupItemGroup): Item
  updateItemGroup(id: ID!, image: String, name: String, inventoryId: ID, inventory: ItemGroupinventoryInventory, itemsIds: [ID!], items: [ItemGroupitemsItem!]): ItemGroup
  updateOpenHours(day: Weekdays, end: String, id: ID!, isOvernight: Boolean, start: String, hoursId: ID, hours: OpenHourshoursHours): OpenHours
  updateSocialMedia(id: ID!, url: String, brandId: ID, brand: SocialMediabrandBrand, businessId: ID, business: SocialMediabusinessBusiness): SocialMedia
  updateStaff(id: ID!, image: String, name: String, quote: String, role: String, businessId: ID, business: StaffbusinessBusiness): Staff
  updateStory(id: ID!, lastUpdated: DateTime, paragraph: String, title: String, aboutPageId: ID, aboutPage: StoryaboutPageAboutPage, homePageId: ID, homePage: StoryhomePageHomePage): Story
  updateUser(email: String, firstName: String, id: ID!, lastName: String, password: String): User
  updateWebsite(id: ID!, aboutPageId: ID, aboutPage: WebsiteaboutPageAboutPage, businessId: ID, business: WebsitebusinessBusiness, homePageId: ID, homePage: WebsitehomePageHomePage): Website
  updateOrCreateAboutPage(update: UpdateAboutPage!, create: CreateAboutPage!): AboutPage
  updateOrCreateBanner(update: UpdateBanner!, create: CreateBanner!): Banner
  updateOrCreateBrand(update: UpdateBrand!, create: CreateBrand!): Brand
  updateOrCreateBusiness(update: UpdateBusiness!, create: CreateBusiness!): Business
  updateOrCreateBusinessSpecials(update: UpdateBusinessSpecials!, create: CreateBusinessSpecials!): BusinessSpecials
  updateOrCreateByDateSpecial(update: UpdateByDateSpecial!, create: CreateByDateSpecial!): ByDateSpecial
  updateOrCreateByWeekdaySpecial(update: UpdateByWeekdaySpecial!, create: CreateByWeekdaySpecial!): ByWeekdaySpecial
  updateOrCreateContact(update: UpdateContact!, create: CreateContact!): Contact
  updateOrCreateFile(update: UpdateFile!, create: CreateFile!): File
  updateOrCreateHomePage(update: UpdateHomePage!, create: CreateHomePage!): HomePage
  updateOrCreateHours(update: UpdateHours!, create: CreateHours!): Hours
  updateOrCreateInventory(update: UpdateInventory!, create: CreateInventory!): Inventory
  updateOrCreateItem(update: UpdateItem!, create: CreateItem!): Item
  updateOrCreateItemGroup(update: UpdateItemGroup!, create: CreateItemGroup!): ItemGroup
  updateOrCreateOpenHours(update: UpdateOpenHours!, create: CreateOpenHours!): OpenHours
  updateOrCreateSocialMedia(update: UpdateSocialMedia!, create: CreateSocialMedia!): SocialMedia
  updateOrCreateStaff(update: UpdateStaff!, create: CreateStaff!): Staff
  updateOrCreateStory(update: UpdateStory!, create: CreateStory!): Story
  updateOrCreateUser(update: UpdateUser!, create: CreateUser!): User
  updateOrCreateWebsite(update: UpdateWebsite!, create: CreateWebsite!): Website
  deleteAboutPage(id: ID!): AboutPage
  deleteBanner(id: ID!): Banner
  deleteBrand(id: ID!): Brand
  deleteBusiness(id: ID!): Business
  deleteBusinessSpecials(id: ID!): BusinessSpecials
  deleteByDateSpecial(id: ID!): ByDateSpecial
  deleteByWeekdaySpecial(id: ID!): ByWeekdaySpecial
  deleteContact(id: ID!): Contact
  deleteFile(id: ID!): File
  deleteHomePage(id: ID!): HomePage
  deleteHours(id: ID!): Hours
  deleteInventory(id: ID!): Inventory
  deleteItem(id: ID!): Item
  deleteItemGroup(id: ID!): ItemGroup
  deleteOpenHours(id: ID!): OpenHours
  deleteSocialMedia(id: ID!): SocialMedia
  deleteStaff(id: ID!): Staff
  deleteStory(id: ID!): Story
  deleteUser(id: ID!): User
  deleteWebsite(id: ID!): Website
  setAboutPageOnBanner(bannerBannerId: ID!, aboutPageAboutPageId: ID!): SetAboutPageOnBannerPayload
  setAboutPageOnStory(storyStoryId: ID!, aboutPageAboutPageId: ID!): SetAboutPageOnStoryPayload
  setAboutPageOnWebsite(websiteWebsiteId: ID!, aboutPageAboutPageId: ID!): SetAboutPageOnWebsitePayload
  setBannerOnHomePage(homePageHomePageId: ID!, bannerBannerId: ID!): SetBannerOnHomePagePayload
  setBusinessSpecialsOnBusiness(businessBusinessId: ID!, businessSpecialsBusinessSpecialsId: ID!): SetBusinessSpecialsOnBusinessPayload
  setByDateSpecialOnItem(itemItemId: ID!, byDateSpecialByDateSpecialId: ID!): SetByDateSpecialOnItemPayload
  setByWeekdaySpecialOnItem(itemItemId: ID!, byWeekdaySpecialByWeekdaySpecialId: ID!): SetByWeekdaySpecialOnItemPayload
  setContactOnBusiness(businessBusinessId: ID!, contactContactId: ID!): SetContactOnBusinessPayload
  setHoursOnBusiness(businessBusinessId: ID!, hoursHoursId: ID!): SetHoursOnBusinessPayload
  setInventoryOnBusiness(businessBusinessId: ID!, inventoryInventoryId: ID!): SetInventoryOnBusinessPayload
  setStoryOnHomePage(homePageHomePageId: ID!, storyStoryId: ID!): SetStoryOnHomePagePayload
  setWebsiteOnBusiness(businessBusinessId: ID!, websiteWebsiteId: ID!): SetWebsiteOnBusinessPayload
  setWebsiteOnHomePage(homePageHomePageId: ID!, websiteWebsiteId: ID!): SetWebsiteOnHomePagePayload
  unsetAboutPageOnBanner(bannerBannerId: ID!, aboutPageAboutPageId: ID!): UnsetAboutPageOnBannerPayload
  unsetAboutPageOnStory(storyStoryId: ID!, aboutPageAboutPageId: ID!): UnsetAboutPageOnStoryPayload
  unsetAboutPageOnWebsite(websiteWebsiteId: ID!, aboutPageAboutPageId: ID!): UnsetAboutPageOnWebsitePayload
  unsetBannerOnHomePage(homePageHomePageId: ID!, bannerBannerId: ID!): UnsetBannerOnHomePagePayload
  unsetBusinessSpecialsOnBusiness(businessBusinessId: ID!, businessSpecialsBusinessSpecialsId: ID!): UnsetBusinessSpecialsOnBusinessPayload
  unsetByDateSpecialOnItem(itemItemId: ID!, byDateSpecialByDateSpecialId: ID!): UnsetByDateSpecialOnItemPayload
  unsetByWeekdaySpecialOnItem(itemItemId: ID!, byWeekdaySpecialByWeekdaySpecialId: ID!): UnsetByWeekdaySpecialOnItemPayload
  unsetContactOnBusiness(businessBusinessId: ID!, contactContactId: ID!): UnsetContactOnBusinessPayload
  unsetHoursOnBusiness(businessBusinessId: ID!, hoursHoursId: ID!): UnsetHoursOnBusinessPayload
  unsetInventoryOnBusiness(businessBusinessId: ID!, inventoryInventoryId: ID!): UnsetInventoryOnBusinessPayload
  unsetStoryOnHomePage(homePageHomePageId: ID!, storyStoryId: ID!): UnsetStoryOnHomePagePayload
  unsetWebsiteOnBusiness(businessBusinessId: ID!, websiteWebsiteId: ID!): UnsetWebsiteOnBusinessPayload
  unsetWebsiteOnHomePage(homePageHomePageId: ID!, websiteWebsiteId: ID!): UnsetWebsiteOnHomePagePayload
  addToBrandOnSocialMedia(socialMediasSocialMediaId: ID!, brandBrandId: ID!): AddToBrandOnSocialMediaPayload
  addToBusinessSpecialsOnByDateSpecial(byDateSpecialsByDateSpecialId: ID!, businessSpecialsBusinessSpecialsId: ID!): AddToBusinessSpecialsOnByDateSpecialPayload
  addToBusinessSpecialsOnByWeekdaySpecial(byWeekdaySpecialsByWeekdaySpecialId: ID!, businessSpecialsBusinessSpecialsId: ID!): AddToBusinessSpecialsOnByWeekdaySpecialPayload
  addToItemGroupOnInventory(inventoryInventoryId: ID!, itemGroupsItemGroupId: ID!): AddToItemGroupOnInventoryPayload
  addToItemOnItemGroup(itemGroupItemGroupId: ID!, itemsItemId: ID!): AddToItemOnItemGroupPayload
  addToOpenHoursOnHours(hoursHoursId: ID!, openHoursesOpenHoursId: ID!): AddToOpenHoursOnHoursPayload
  addToSocialMediaOnBusiness(businessBusinessId: ID!, socialMediasSocialMediaId: ID!): AddToSocialMediaOnBusinessPayload
  addToStaffOnBusiness(businessBusinessId: ID!, staffsStaffId: ID!): AddToStaffOnBusinessPayload
  removeFromBrandOnSocialMedia(socialMediasSocialMediaId: ID!, brandBrandId: ID!): RemoveFromBrandOnSocialMediaPayload
  removeFromBusinessSpecialsOnByDateSpecial(byDateSpecialsByDateSpecialId: ID!, businessSpecialsBusinessSpecialsId: ID!): RemoveFromBusinessSpecialsOnByDateSpecialPayload
  removeFromBusinessSpecialsOnByWeekdaySpecial(byWeekdaySpecialsByWeekdaySpecialId: ID!, businessSpecialsBusinessSpecialsId: ID!): RemoveFromBusinessSpecialsOnByWeekdaySpecialPayload
  removeFromItemGroupOnInventory(inventoryInventoryId: ID!, itemGroupsItemGroupId: ID!): RemoveFromItemGroupOnInventoryPayload
  removeFromItemOnItemGroup(itemGroupItemGroupId: ID!, itemsItemId: ID!): RemoveFromItemOnItemGroupPayload
  removeFromOpenHoursOnHours(hoursHoursId: ID!, openHoursesOpenHoursId: ID!): RemoveFromOpenHoursOnHoursPayload
  removeFromSocialMediaOnBusiness(businessBusinessId: ID!, socialMediasSocialMediaId: ID!): RemoveFromSocialMediaOnBusinessPayload
  removeFromStaffOnBusiness(businessBusinessId: ID!, staffsStaffId: ID!): RemoveFromStaffOnBusinessPayload
  createUser(email: String!, firstName: String!, lastName: String!, password: String!): User
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type OpenHours implements Node {
  day: Weekdays!
  end: String!
  hours(filter: HoursFilter): Hours
  id: ID!
  isOvernight: Boolean!
  start: String!
}

input OpenHoursFilter {
  """Logical AND on all given filters."""
  AND: [OpenHoursFilter!]

  """Logical OR on all given filters."""
  OR: [OpenHoursFilter!]
  day: Weekdays

  """All values that are not equal to given value."""
  day_not: Weekdays

  """All values that are contained in given list."""
  day_in: [Weekdays!]

  """All values that are not contained in given list."""
  day_not_in: [Weekdays!]
  end: String

  """All values that are not equal to given value."""
  end_not: String

  """All values that are contained in given list."""
  end_in: [String!]

  """All values that are not contained in given list."""
  end_not_in: [String!]

  """All values less than the given value."""
  end_lt: String

  """All values less than or equal the given value."""
  end_lte: String

  """All values greater than the given value."""
  end_gt: String

  """All values greater than or equal the given value."""
  end_gte: String

  """All values containing the given string."""
  end_contains: String

  """All values not containing the given string."""
  end_not_contains: String

  """All values starting with the given string."""
  end_starts_with: String

  """All values not starting with the given string."""
  end_not_starts_with: String

  """All values ending with the given string."""
  end_ends_with: String

  """All values not ending with the given string."""
  end_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  isOvernight: Boolean

  """All values that are not equal to given value."""
  isOvernight_not: Boolean
  start: String

  """All values that are not equal to given value."""
  start_not: String

  """All values that are contained in given list."""
  start_in: [String!]

  """All values that are not contained in given list."""
  start_not_in: [String!]

  """All values less than the given value."""
  start_lt: String

  """All values less than or equal the given value."""
  start_lte: String

  """All values greater than the given value."""
  start_gt: String

  """All values greater than or equal the given value."""
  start_gte: String

  """All values containing the given string."""
  start_contains: String

  """All values not containing the given string."""
  start_not_contains: String

  """All values starting with the given string."""
  start_starts_with: String

  """All values not starting with the given string."""
  start_not_starts_with: String

  """All values ending with the given string."""
  start_ends_with: String

  """All values not ending with the given string."""
  start_not_ends_with: String
  hours: HoursFilter
}

input OpenHourshoursHours {
  isOpenNow: Boolean!
  businessId: ID
  business: HoursbusinessBusiness
  openHoursesIds: [ID!]
  openHourses: [HoursopenHoursesOpenHours!]
}

enum OpenHoursOrderBy {
  day_ASC
  day_DESC
  end_ASC
  end_DESC
  id_ASC
  id_DESC
  isOvernight_ASC
  isOvernight_DESC
  start_ASC
  start_DESC
}

type OpenHoursPreviousValues {
  day: Weekdays!
  end: String!
  id: ID!
  isOvernight: Boolean!
  start: String!
}

input OpenHoursSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [OpenHoursSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [OpenHoursSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OpenHoursSubscriptionFilterNode
}

input OpenHoursSubscriptionFilterNode {
  day: Weekdays

  """All values that are not equal to given value."""
  day_not: Weekdays

  """All values that are contained in given list."""
  day_in: [Weekdays!]

  """All values that are not contained in given list."""
  day_not_in: [Weekdays!]
  end: String

  """All values that are not equal to given value."""
  end_not: String

  """All values that are contained in given list."""
  end_in: [String!]

  """All values that are not contained in given list."""
  end_not_in: [String!]

  """All values less than the given value."""
  end_lt: String

  """All values less than or equal the given value."""
  end_lte: String

  """All values greater than the given value."""
  end_gt: String

  """All values greater than or equal the given value."""
  end_gte: String

  """All values containing the given string."""
  end_contains: String

  """All values not containing the given string."""
  end_not_contains: String

  """All values starting with the given string."""
  end_starts_with: String

  """All values not starting with the given string."""
  end_not_starts_with: String

  """All values ending with the given string."""
  end_ends_with: String

  """All values not ending with the given string."""
  end_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  isOvernight: Boolean

  """All values that are not equal to given value."""
  isOvernight_not: Boolean
  start: String

  """All values that are not equal to given value."""
  start_not: String

  """All values that are contained in given list."""
  start_in: [String!]

  """All values that are not contained in given list."""
  start_not_in: [String!]

  """All values less than the given value."""
  start_lt: String

  """All values less than or equal the given value."""
  start_lte: String

  """All values greater than the given value."""
  start_gt: String

  """All values greater than or equal the given value."""
  start_gte: String

  """All values containing the given string."""
  start_contains: String

  """All values not containing the given string."""
  start_not_contains: String

  """All values starting with the given string."""
  start_starts_with: String

  """All values not starting with the given string."""
  start_not_starts_with: String

  """All values ending with the given string."""
  start_ends_with: String

  """All values not ending with the given string."""
  start_not_ends_with: String
  hours: HoursFilter
}

type OpenHoursSubscriptionPayload {
  mutation: _ModelMutationType!
  node: OpenHours
  updatedFields: [String!]
  previousValues: OpenHoursPreviousValues
}

type Query {
  allAboutPages(filter: AboutPageFilter, orderBy: AboutPageOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [AboutPage!]!
  allBanners(filter: BannerFilter, orderBy: BannerOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Banner!]!
  allBrands(filter: BrandFilter, orderBy: BrandOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Brand!]!
  allBusinesses(filter: BusinessFilter, orderBy: BusinessOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Business!]!
  allBusinessSpecialses(filter: BusinessSpecialsFilter, orderBy: BusinessSpecialsOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [BusinessSpecials!]!
  allByDateSpecials(filter: ByDateSpecialFilter, orderBy: ByDateSpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ByDateSpecial!]!
  allByWeekdaySpecials(filter: ByWeekdaySpecialFilter, orderBy: ByWeekdaySpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ByWeekdaySpecial!]!
  allContacts(filter: ContactFilter, orderBy: ContactOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Contact!]!
  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [File!]!
  allHomePages(filter: HomePageFilter, orderBy: HomePageOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [HomePage!]!
  allHourses(filter: HoursFilter, orderBy: HoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Hours!]!
  allInventories(filter: InventoryFilter, orderBy: InventoryOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Inventory!]!
  allItems(filter: ItemFilter, orderBy: ItemOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Item!]!
  allItemGroups(filter: ItemGroupFilter, orderBy: ItemGroupOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [ItemGroup!]!
  allOpenHourses(filter: OpenHoursFilter, orderBy: OpenHoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [OpenHours!]!
  allSocialMedias(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia!]!
  allStaffs(filter: StaffFilter, orderBy: StaffOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Staff!]!
  allStories(filter: StoryFilter, orderBy: StoryOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Story!]!
  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [User!]!
  allWebsites(filter: WebsiteFilter, orderBy: WebsiteOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Website!]!
  _allAboutPagesMeta(filter: AboutPageFilter, orderBy: AboutPageOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allBannersMeta(filter: BannerFilter, orderBy: BannerOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allBrandsMeta(filter: BrandFilter, orderBy: BrandOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allBusinessesMeta(filter: BusinessFilter, orderBy: BusinessOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allBusinessSpecialsesMeta(filter: BusinessSpecialsFilter, orderBy: BusinessSpecialsOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allByDateSpecialsMeta(filter: ByDateSpecialFilter, orderBy: ByDateSpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allByWeekdaySpecialsMeta(filter: ByWeekdaySpecialFilter, orderBy: ByWeekdaySpecialOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allContactsMeta(filter: ContactFilter, orderBy: ContactOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allFilesMeta(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allHomePagesMeta(filter: HomePageFilter, orderBy: HomePageOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allHoursesMeta(filter: HoursFilter, orderBy: HoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allInventoriesMeta(filter: InventoryFilter, orderBy: InventoryOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allItemsMeta(filter: ItemFilter, orderBy: ItemOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allItemGroupsMeta(filter: ItemGroupFilter, orderBy: ItemGroupOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allOpenHoursesMeta(filter: OpenHoursFilter, orderBy: OpenHoursOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allSocialMediasMeta(filter: SocialMediaFilter, orderBy: SocialMediaOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allStaffsMeta(filter: StaffFilter, orderBy: StaffOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allStoriesMeta(filter: StoryFilter, orderBy: StoryOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allUsersMeta(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allWebsitesMeta(filter: WebsiteFilter, orderBy: WebsiteOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  AboutPage(id: ID): AboutPage
  Banner(id: ID): Banner
  Brand(id: ID): Brand
  Business(id: ID): Business
  BusinessSpecials(id: ID): BusinessSpecials
  ByDateSpecial(id: ID): ByDateSpecial
  ByWeekdaySpecial(id: ID): ByWeekdaySpecial
  Contact(id: ID): Contact
  File(id: ID, secret: String, url: String): File
  HomePage(id: ID): HomePage
  Hours(id: ID): Hours
  Inventory(id: ID): Inventory
  Item(id: ID): Item
  ItemGroup(id: ID): ItemGroup
  OpenHours(id: ID): OpenHours
  SocialMedia(id: ID): SocialMedia
  Staff(id: ID): Staff
  Story(id: ID): Story
  User(email: String, id: ID): User
  Website(id: ID): Website
  user: User

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type RemoveFromBrandOnSocialMediaPayload {
  brandBrand: Brand
  socialMediasSocialMedia: SocialMedia
}

type RemoveFromBusinessSpecialsOnByDateSpecialPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  byDateSpecialsByDateSpecial: ByDateSpecial
}

type RemoveFromBusinessSpecialsOnByWeekdaySpecialPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  byWeekdaySpecialsByWeekdaySpecial: ByWeekdaySpecial
}

type RemoveFromItemGroupOnInventoryPayload {
  itemGroupsItemGroup: ItemGroup
  inventoryInventory: Inventory
}

type RemoveFromItemOnItemGroupPayload {
  itemsItem: Item
  itemGroupItemGroup: ItemGroup
}

type RemoveFromOpenHoursOnHoursPayload {
  openHoursesOpenHours: OpenHours
  hoursHours: Hours
}

type RemoveFromSocialMediaOnBusinessPayload {
  socialMediasSocialMedia: SocialMedia
  businessBusiness: Business
}

type RemoveFromStaffOnBusinessPayload {
  staffsStaff: Staff
  businessBusiness: Business
}

type SetAboutPageOnBannerPayload {
  aboutPageAboutPage: AboutPage
  bannerBanner: Banner
}

type SetAboutPageOnStoryPayload {
  aboutPageAboutPage: AboutPage
  storyStory: Story
}

type SetAboutPageOnWebsitePayload {
  aboutPageAboutPage: AboutPage
  websiteWebsite: Website
}

type SetBannerOnHomePagePayload {
  bannerBanner: Banner
  homePageHomePage: HomePage
}

type SetBusinessSpecialsOnBusinessPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  businessBusiness: Business
}

type SetByDateSpecialOnItemPayload {
  byDateSpecialByDateSpecial: ByDateSpecial
  itemItem: Item
}

type SetByWeekdaySpecialOnItemPayload {
  byWeekdaySpecialByWeekdaySpecial: ByWeekdaySpecial
  itemItem: Item
}

type SetContactOnBusinessPayload {
  contactContact: Contact
  businessBusiness: Business
}

type SetHoursOnBusinessPayload {
  hoursHours: Hours
  businessBusiness: Business
}

type SetInventoryOnBusinessPayload {
  inventoryInventory: Inventory
  businessBusiness: Business
}

type SetStoryOnHomePagePayload {
  storyStory: Story
  homePageHomePage: HomePage
}

type SetWebsiteOnBusinessPayload {
  websiteWebsite: Website
  businessBusiness: Business
}

type SetWebsiteOnHomePagePayload {
  websiteWebsite: Website
  homePageHomePage: HomePage
}

type SocialMedia implements Node {
  brand(filter: BrandFilter): Brand
  business(filter: BusinessFilter): Business
  id: ID!
  url: String!
}

input SocialMediabrandBrand {
  icon: String!
  name: String!
  socialMediasIds: [ID!]
  socialMedias: [BrandsocialMediasSocialMedia!]
}

input SocialMediabusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input SocialMediaFilter {
  """Logical AND on all given filters."""
  AND: [SocialMediaFilter!]

  """Logical OR on all given filters."""
  OR: [SocialMediaFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  brand: BrandFilter
  business: BusinessFilter
}

enum SocialMediaOrderBy {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
}

type SocialMediaPreviousValues {
  id: ID!
  url: String!
}

input SocialMediaSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [SocialMediaSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [SocialMediaSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SocialMediaSubscriptionFilterNode
}

input SocialMediaSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  brand: BrandFilter
  business: BusinessFilter
}

type SocialMediaSubscriptionPayload {
  mutation: _ModelMutationType!
  node: SocialMedia
  updatedFields: [String!]
  previousValues: SocialMediaPreviousValues
}

type Staff implements Node {
  business(filter: BusinessFilter): Business
  id: ID!
  image: String
  name: String!
  quote: String
  role: String!
}

input StaffbusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input StaffFilter {
  """Logical AND on all given filters."""
  AND: [StaffFilter!]

  """Logical OR on all given filters."""
  OR: [StaffFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  quote: String

  """All values that are not equal to given value."""
  quote_not: String

  """All values that are contained in given list."""
  quote_in: [String!]

  """All values that are not contained in given list."""
  quote_not_in: [String!]

  """All values less than the given value."""
  quote_lt: String

  """All values less than or equal the given value."""
  quote_lte: String

  """All values greater than the given value."""
  quote_gt: String

  """All values greater than or equal the given value."""
  quote_gte: String

  """All values containing the given string."""
  quote_contains: String

  """All values not containing the given string."""
  quote_not_contains: String

  """All values starting with the given string."""
  quote_starts_with: String

  """All values not starting with the given string."""
  quote_not_starts_with: String

  """All values ending with the given string."""
  quote_ends_with: String

  """All values not ending with the given string."""
  quote_not_ends_with: String
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  business: BusinessFilter
}

enum StaffOrderBy {
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  quote_ASC
  quote_DESC
  role_ASC
  role_DESC
}

type StaffPreviousValues {
  id: ID!
  image: String
  name: String!
  quote: String
  role: String!
}

input StaffSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [StaffSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [StaffSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StaffSubscriptionFilterNode
}

input StaffSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  quote: String

  """All values that are not equal to given value."""
  quote_not: String

  """All values that are contained in given list."""
  quote_in: [String!]

  """All values that are not contained in given list."""
  quote_not_in: [String!]

  """All values less than the given value."""
  quote_lt: String

  """All values less than or equal the given value."""
  quote_lte: String

  """All values greater than the given value."""
  quote_gt: String

  """All values greater than or equal the given value."""
  quote_gte: String

  """All values containing the given string."""
  quote_contains: String

  """All values not containing the given string."""
  quote_not_contains: String

  """All values starting with the given string."""
  quote_starts_with: String

  """All values not starting with the given string."""
  quote_not_starts_with: String

  """All values ending with the given string."""
  quote_ends_with: String

  """All values not ending with the given string."""
  quote_not_ends_with: String
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  business: BusinessFilter
}

type StaffSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Staff
  updatedFields: [String!]
  previousValues: StaffPreviousValues
}

type Story implements Node {
  aboutPage(filter: AboutPageFilter): AboutPage
  homePage(filter: HomePageFilter): HomePage
  id: ID!
  lastUpdated: DateTime!
  paragraph: String
  title: String
}

input StoryaboutPageAboutPage {
  bannerId: ID
  banner: AboutPagebannerBanner
  websiteId: ID
  website: AboutPagewebsiteWebsite
}

input StoryFilter {
  """Logical AND on all given filters."""
  AND: [StoryFilter!]

  """Logical OR on all given filters."""
  OR: [StoryFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lastUpdated: DateTime

  """All values that are not equal to given value."""
  lastUpdated_not: DateTime

  """All values that are contained in given list."""
  lastUpdated_in: [DateTime!]

  """All values that are not contained in given list."""
  lastUpdated_not_in: [DateTime!]

  """All values less than the given value."""
  lastUpdated_lt: DateTime

  """All values less than or equal the given value."""
  lastUpdated_lte: DateTime

  """All values greater than the given value."""
  lastUpdated_gt: DateTime

  """All values greater than or equal the given value."""
  lastUpdated_gte: DateTime
  paragraph: String

  """All values that are not equal to given value."""
  paragraph_not: String

  """All values that are contained in given list."""
  paragraph_in: [String!]

  """All values that are not contained in given list."""
  paragraph_not_in: [String!]

  """All values less than the given value."""
  paragraph_lt: String

  """All values less than or equal the given value."""
  paragraph_lte: String

  """All values greater than the given value."""
  paragraph_gt: String

  """All values greater than or equal the given value."""
  paragraph_gte: String

  """All values containing the given string."""
  paragraph_contains: String

  """All values not containing the given string."""
  paragraph_not_contains: String

  """All values starting with the given string."""
  paragraph_starts_with: String

  """All values not starting with the given string."""
  paragraph_not_starts_with: String

  """All values ending with the given string."""
  paragraph_ends_with: String

  """All values not ending with the given string."""
  paragraph_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  aboutPage: AboutPageFilter
  homePage: HomePageFilter
}

input StoryhomePageHomePage {
  bannerId: ID
  banner: HomePagebannerBanner
  websiteId: ID
  website: HomePagewebsiteWebsite
}

enum StoryOrderBy {
  id_ASC
  id_DESC
  lastUpdated_ASC
  lastUpdated_DESC
  paragraph_ASC
  paragraph_DESC
  title_ASC
  title_DESC
}

type StoryPreviousValues {
  id: ID!
  lastUpdated: DateTime!
  paragraph: String
  title: String
}

input StorySubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [StorySubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [StorySubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StorySubscriptionFilterNode
}

input StorySubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lastUpdated: DateTime

  """All values that are not equal to given value."""
  lastUpdated_not: DateTime

  """All values that are contained in given list."""
  lastUpdated_in: [DateTime!]

  """All values that are not contained in given list."""
  lastUpdated_not_in: [DateTime!]

  """All values less than the given value."""
  lastUpdated_lt: DateTime

  """All values less than or equal the given value."""
  lastUpdated_lte: DateTime

  """All values greater than the given value."""
  lastUpdated_gt: DateTime

  """All values greater than or equal the given value."""
  lastUpdated_gte: DateTime
  paragraph: String

  """All values that are not equal to given value."""
  paragraph_not: String

  """All values that are contained in given list."""
  paragraph_in: [String!]

  """All values that are not contained in given list."""
  paragraph_not_in: [String!]

  """All values less than the given value."""
  paragraph_lt: String

  """All values less than or equal the given value."""
  paragraph_lte: String

  """All values greater than the given value."""
  paragraph_gt: String

  """All values greater than or equal the given value."""
  paragraph_gte: String

  """All values containing the given string."""
  paragraph_contains: String

  """All values not containing the given string."""
  paragraph_not_contains: String

  """All values starting with the given string."""
  paragraph_starts_with: String

  """All values not starting with the given string."""
  paragraph_not_starts_with: String

  """All values ending with the given string."""
  paragraph_ends_with: String

  """All values not ending with the given string."""
  paragraph_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  aboutPage: AboutPageFilter
  homePage: HomePageFilter
}

type StorySubscriptionPayload {
  mutation: _ModelMutationType!
  node: Story
  updatedFields: [String!]
  previousValues: StoryPreviousValues
}

type Subscription {
  AboutPage(filter: AboutPageSubscriptionFilter): AboutPageSubscriptionPayload
  Banner(filter: BannerSubscriptionFilter): BannerSubscriptionPayload
  Brand(filter: BrandSubscriptionFilter): BrandSubscriptionPayload
  Business(filter: BusinessSubscriptionFilter): BusinessSubscriptionPayload
  BusinessSpecials(filter: BusinessSpecialsSubscriptionFilter): BusinessSpecialsSubscriptionPayload
  ByDateSpecial(filter: ByDateSpecialSubscriptionFilter): ByDateSpecialSubscriptionPayload
  ByWeekdaySpecial(filter: ByWeekdaySpecialSubscriptionFilter): ByWeekdaySpecialSubscriptionPayload
  Contact(filter: ContactSubscriptionFilter): ContactSubscriptionPayload
  File(filter: FileSubscriptionFilter): FileSubscriptionPayload
  HomePage(filter: HomePageSubscriptionFilter): HomePageSubscriptionPayload
  Hours(filter: HoursSubscriptionFilter): HoursSubscriptionPayload
  Inventory(filter: InventorySubscriptionFilter): InventorySubscriptionPayload
  Item(filter: ItemSubscriptionFilter): ItemSubscriptionPayload
  ItemGroup(filter: ItemGroupSubscriptionFilter): ItemGroupSubscriptionPayload
  OpenHours(filter: OpenHoursSubscriptionFilter): OpenHoursSubscriptionPayload
  SocialMedia(filter: SocialMediaSubscriptionFilter): SocialMediaSubscriptionPayload
  Staff(filter: StaffSubscriptionFilter): StaffSubscriptionPayload
  Story(filter: StorySubscriptionFilter): StorySubscriptionPayload
  User(filter: UserSubscriptionFilter): UserSubscriptionPayload
  Website(filter: WebsiteSubscriptionFilter): WebsiteSubscriptionPayload
}

type UnsetAboutPageOnBannerPayload {
  aboutPageAboutPage: AboutPage
  bannerBanner: Banner
}

type UnsetAboutPageOnStoryPayload {
  aboutPageAboutPage: AboutPage
  storyStory: Story
}

type UnsetAboutPageOnWebsitePayload {
  aboutPageAboutPage: AboutPage
  websiteWebsite: Website
}

type UnsetBannerOnHomePagePayload {
  bannerBanner: Banner
  homePageHomePage: HomePage
}

type UnsetBusinessSpecialsOnBusinessPayload {
  businessSpecialsBusinessSpecials: BusinessSpecials
  businessBusiness: Business
}

type UnsetByDateSpecialOnItemPayload {
  byDateSpecialByDateSpecial: ByDateSpecial
  itemItem: Item
}

type UnsetByWeekdaySpecialOnItemPayload {
  byWeekdaySpecialByWeekdaySpecial: ByWeekdaySpecial
  itemItem: Item
}

type UnsetContactOnBusinessPayload {
  contactContact: Contact
  businessBusiness: Business
}

type UnsetHoursOnBusinessPayload {
  hoursHours: Hours
  businessBusiness: Business
}

type UnsetInventoryOnBusinessPayload {
  inventoryInventory: Inventory
  businessBusiness: Business
}

type UnsetStoryOnHomePagePayload {
  storyStory: Story
  homePageHomePage: HomePage
}

type UnsetWebsiteOnBusinessPayload {
  websiteWebsite: Website
  businessBusiness: Business
}

type UnsetWebsiteOnHomePagePayload {
  websiteWebsite: Website
  homePageHomePage: HomePage
}

input UpdateAboutPage {
  id: ID!
  bannerId: ID
  banner: AboutPagebannerBanner
  storyId: ID
  story: AboutPagestoryStory
  websiteId: ID
  website: AboutPagewebsiteWebsite
}

input UpdateBanner {
  id: ID!
  images: [String!]
  subtitle: String
  titles: [String!]
  aboutPageId: ID
  aboutPage: BanneraboutPageAboutPage
  homePageId: ID
  homePage: BannerhomePageHomePage
}

input UpdateBrand {
  icon: String
  id: ID!
  name: String
  socialMediasIds: [ID!]
  socialMedias: [BrandsocialMediasSocialMedia!]
}

input UpdateBusiness {
  id: ID!
  name: String
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  websiteId: ID
  website: BusinesswebsiteWebsite
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input UpdateBusinessSpecials {
  id: ID!
  businessId: ID
  business: BusinessSpecialsbusinessBusiness
  byDateSpecialsIds: [ID!]
  byDateSpecials: [BusinessSpecialsbyDateSpecialsByDateSpecial!]
  byWeekdaySpecialsIds: [ID!]
  byWeekdaySpecials: [BusinessSpecialsbyWeekdaySpecialsByWeekdaySpecial!]
}

input UpdateByDateSpecial {
  date: DateTime
  description: String
  id: ID!
  image: String
  occasion: String
  title: String
  businessSpecialsId: ID
  businessSpecials: ByDateSpecialbusinessSpecialsBusinessSpecials
  itemId: ID
  item: ByDateSpecialitemItem
}

input UpdateByWeekdaySpecial {
  description: String
  id: ID!
  image: String
  occasion: Weekdays
  title: String
  businessSpecialsId: ID
  businessSpecials: ByWeekdaySpecialbusinessSpecialsBusinessSpecials
  itemId: ID
  item: ByWeekdaySpecialitemItem
}

input UpdateContact {
  city: String
  country: String
  id: ID!
  phone: String
  street: String
  businessId: ID
  business: ContactbusinessBusiness
}

input UpdateFile {
  id: ID!
  name: String
}

input UpdateHomePage {
  id: ID!
  bannerId: ID
  banner: HomePagebannerBanner
  storyId: ID
  story: HomePagestoryStory
  websiteId: ID
  website: HomePagewebsiteWebsite
}

input UpdateHours {
  id: ID!
  isOpenNow: Boolean
  businessId: ID
  business: HoursbusinessBusiness
  openHoursesIds: [ID!]
  openHourses: [HoursopenHoursesOpenHours!]
}

input UpdateInventory {
  id: ID!
  businessId: ID
  business: InventorybusinessBusiness
  itemGroupsIds: [ID!]
  itemGroups: [InventoryitemGroupsItemGroup!]
}

input UpdateItem {
  description: String
  id: ID!
  image: String
  inStock: Boolean
  name: String
  price: Int
  byDateSpecialId: ID
  byDateSpecial: ItembyDateSpecialByDateSpecial
  byWeekdaySpecialId: ID
  byWeekdaySpecial: ItembyWeekdaySpecialByWeekdaySpecial
  itemGroupId: ID
  itemGroup: ItemitemGroupItemGroup
}

input UpdateItemGroup {
  id: ID!
  image: String
  name: String
  inventoryId: ID
  inventory: ItemGroupinventoryInventory
  itemsIds: [ID!]
  items: [ItemGroupitemsItem!]
}

input UpdateOpenHours {
  day: Weekdays
  end: String
  id: ID!
  isOvernight: Boolean
  start: String
  hoursId: ID
  hours: OpenHourshoursHours
}

input UpdateSocialMedia {
  id: ID!
  url: String
  brandId: ID
  brand: SocialMediabrandBrand
  businessId: ID
  business: SocialMediabusinessBusiness
}

input UpdateStaff {
  id: ID!
  image: String
  name: String
  quote: String
  role: String
  businessId: ID
  business: StaffbusinessBusiness
}

input UpdateStory {
  id: ID!
  lastUpdated: DateTime
  paragraph: String
  title: String
  aboutPageId: ID
  aboutPage: StoryaboutPageAboutPage
  homePageId: ID
  homePage: StoryhomePageHomePage
}

input UpdateUser {
  email: String
  firstName: String
  id: ID!
  lastName: String
  password: String
}

input UpdateWebsite {
  id: ID!
  aboutPageId: ID
  aboutPage: WebsiteaboutPageAboutPage
  businessId: ID
  business: WebsitebusinessBusiness
  homePageId: ID
  homePage: WebsitehomePageHomePage
}

type User implements Node {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  password: String!
  updatedAt: DateTime!
}

input UserFilter {
  """Logical AND on all given filters."""
  AND: [UserFilter!]

  """Logical OR on all given filters."""
  OR: [UserFilter!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

enum UserOrderBy {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  password: String!
  updatedAt: DateTime!
}

input UserSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserSubscriptionFilterNode
}

input UserSubscriptionFilterNode {
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type UserSubscriptionPayload {
  mutation: _ModelMutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

type Website implements Node {
  aboutPage(filter: AboutPageFilter): AboutPage
  business(filter: BusinessFilter): Business
  homePage(filter: HomePageFilter): HomePage
  id: ID!
}

input WebsiteaboutPageAboutPage {
  bannerId: ID
  banner: AboutPagebannerBanner
  storyId: ID
  story: AboutPagestoryStory
}

input WebsitebusinessBusiness {
  name: String!
  type: BusinessType
  businessSpecialsId: ID
  businessSpecials: BusinessbusinessSpecialsBusinessSpecials
  contactId: ID
  contact: BusinesscontactContact
  hoursId: ID
  hours: BusinesshoursHours
  inventoryId: ID
  inventory: BusinessinventoryInventory
  socialMediasIds: [ID!]
  socialMedias: [BusinesssocialMediasSocialMedia!]
  staffsIds: [ID!]
  staffs: [BusinessstaffsStaff!]
}

input WebsiteFilter {
  """Logical AND on all given filters."""
  AND: [WebsiteFilter!]

  """Logical OR on all given filters."""
  OR: [WebsiteFilter!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  aboutPage: AboutPageFilter
  business: BusinessFilter
  homePage: HomePageFilter
}

input WebsitehomePageHomePage {
  bannerId: ID
  banner: HomePagebannerBanner
  storyId: ID
  story: HomePagestoryStory
}

enum WebsiteOrderBy {
  id_ASC
  id_DESC
}

type WebsitePreviousValues {
  id: ID!
}

input WebsiteSubscriptionFilter {
  """Logical AND on all given filters."""
  AND: [WebsiteSubscriptionFilter!]

  """Logical OR on all given filters."""
  OR: [WebsiteSubscriptionFilter!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [_ModelMutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WebsiteSubscriptionFilterNode
}

input WebsiteSubscriptionFilterNode {
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  aboutPage: AboutPageFilter
  business: BusinessFilter
  homePage: HomePageFilter
}

type WebsiteSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Website
  updatedFields: [String!]
  previousValues: WebsitePreviousValues
}

enum Weekdays {
  SUN
  MON
  TUE
  WED
  THU
  FRI
  SAT
}
